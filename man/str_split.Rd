% Generated by roxygen2 (4.0.2.9000): do not edit by hand
\name{str_split}
\alias{str_split}
\title{Split up a string into a variable number of pieces.}
\usage{
str_split(string, pattern, n = Inf)
}
\arguments{
\item{string}{Input vector. Either a character vector, or something
coercible to one.}

\item{pattern}{Pattern to look for.

  The default interpretation is a regular expression, as described
  in \link[stringi]{stringi-search-regex}. Control options with
  \code{\link{regex}()}.

  Match a fixed string (i.e. by comparing only bytes), using
  \code{\link{fixed}(x)}. This is fast, but approximate. Generally,
  for matching human text, you'll want \code{\link{coll}(x)} which
  respects character matching rules for the specified locale.

  Match character, word, line and sentence boundaries with
  \code{\link{boundary}()}. An empty pattern, "", is equivalent to
  \code{boundary("character")}.}

\item{n}{maximum number of pieces to return.  Default (Inf) uses all
possible split positions.}
}
\value{
a list of character vectors.
}
\description{
Vectorised over \code{string} and \code{pattern}.
}
\examples{
fruits <- c(
  "apples and oranges and pears and bananas",
  "pineapples and mangos and guavas"
)
str_split(fruits, " and ")

# Specify n to restrict the number of possible matches
str_split(fruits, " and ", n = 3)
str_split(fruits, " and ", n = 2)
# If n greater than number of pieces, no padding occurs
str_split(fruits, " and ", n = 5)
}
\seealso{
\code{\link{str_split_fixed}} for fixed number of splits
}
\keyword{character}

